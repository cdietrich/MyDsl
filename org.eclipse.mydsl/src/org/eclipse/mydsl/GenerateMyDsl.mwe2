module org.eclipse.mydsl.GenerateMyDsl

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.eclipse.mydsl"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "windows-1252"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = XtextGeneratorLanguage {
			name = "org.eclipse.mydsl.MyDsl"
			fileExtensions = "mydsl"
fragment = grammarAccess.GrammarAccessFragment2 {}
		    fragment = ecore.EMFGeneratorFragment2 {}
		    fragment = serializer.SerializerFragment2 {
				generateStub = false
			}
		    fragment = resourceFactory.ResourceFactoryFragment2 {}
		    fragment = parser.antlr.XtextAntlrGeneratorFragment2 {
				options = {
				 	classSplitting = true
				}
			}
		    fragment = validation.ValidatorFragment2 {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
		    fragment = scoping.ImportNamespacesScopingFragment2 {}
		    fragment = exporting.QualifiedNamesFragment2 {}
		    fragment = builder.BuilderIntegrationFragment2 {}
//		    fragment = formatting.Formatter2Fragment2 {}
		    fragment = ui.labeling.LabelProviderFragment2 {}
		    fragment = ui.outline.QuickOutlineFragment2 {}
		    fragment = ui.outline.OutlineTreeProviderFragment2 {}
		    fragment = ui.quickfix.QuickfixProviderFragment2 {}
		    fragment = ui.contentAssist.ContentAssistFragment2 {}
		    fragment = junit.JUnitFragment {
				junitVersion = "5"
			}
		    fragment = ui.refactoring.RefactorElementNameFragment2 {}
		    fragment = types.TypesGeneratorFragment2 {}
		    fragment = xbase.XtypeGeneratorFragment2 {}
		    fragment = xbase.XbaseGeneratorFragment2 {}
		    fragment = ui.templates.CodetemplatesGeneratorFragment2 {}
		    fragment = ui.compare.CompareFragment2 {}
		    fragment = web.WebIntegrationFragment {
		        framework = "Ace"
		    }
		    fragment = ui.projectWizard.TemplateProjectWizardFragment {}
		    fragment = ui.fileWizard.TemplateFileWizardFragment {}
//			serializer = {
//				generateStub = false
//			}
//			validator = {
//				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
//				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
//				generateDeprecationValidation = true
//			}
//			junitSupport = {
//				junitVersion = "5"
//			}
		}
	}
}
